scrape_configs:
  # Create a job for Docker Swarm containers.
  - job_name: 'dockerswarm'
    dockerswarm_sd_configs:
      - host: unix:///var/run/docker.sock
        role: tasks
    relabel_configs:
      # Re-map instance from using Docker network IP to using Swarm node hostname.
      - source_labels: [__meta_dockerswarm_node_hostname]
        target_label: instance

      # Filtering rules for containers.
      # Only keep containers that should be running.
      - source_labels: [__meta_dockerswarm_task_desired_state]
        regex: running
        action: keep
      # Only keep containers that have a `io.prometheus.job` label.
      - source_labels: [__meta_dockerswarm_service_label_io_prometheus_enable]
        regex: 'true'
        action: keep
      # Only keep containers that have `prometheus` or `prometheus_agents` network attatched.
      - source_labels: [__meta_dockerswarm_network_name]
        regex: dockerswarm_monitoring
        action: keep

      # Overriding scrape config for containers.
      # Relabel to scrape only single, desired port for the service based
      # based on endpoints "io.prometheus.scrape_port = <port>" label.
      - source_labels: [__address__, __meta_dockerswarm_service_label_io_prometheus_scrape_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__

      # Relabel to customize metric path based on endpoints
      # based on endpoints "io.prometheus.metrics_path = <metrics_path>" label.
      - source_labels: [__meta_dockerswarm_service_label_io_prometheus_metrics_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      # Relabel to configure scrape scheme for all service scrape targets
      # based on endpoints "io.prometheus.scrape_scheme = <scheme>" label.
      - source_labels: [__meta_dockerswarm_service_label_io_prometheus_scrape_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)

      # Relabeling rules for containers.
      # Use the "com.docker.stack.namespace" service label as Prometheus "namespace" label.
      - source_labels: [__meta_dockerswarm_service_label_com_docker_stack_namespace]
        action: replace
        target_label: namespace
      # Use the "com.docker.swarm.service.name" service label as Prometheus "service" label.
      - source_labels: [__meta_dockerswarm_service_name]
        action: replace
        regex: "^.+_(.+)$"
        replacement: "${1}"
        target_label: service
      # Use the "io.prometheus.job_name" Swarm label as Prometheus job label.
      - source_labels: ['__meta_dockerswarm_service_label_com_docker_stack_namespace', 'service']
        separator: '/'
        target_label: job

      # Label map to add Swarm stack labels as Prometheus labels.
      - action: labelmap
        regex: "__meta_dockerswarm_service_label_com_docker_stack_(.*)"
        replacement: "docker_stack_${1}"

      # !!! IMPORTANT !!!
      # Extratanous labels for overriding the prometheus scrape configs
      # Use with caution as these will override any labels set by the relabeling rules above.
      # Use the task labels that are prefixed by `io.prometheus.configs.<key> = <value>`.
      - regex: __meta_dockerswarm_service_label_io_prometheus_configs_(.+)
        action: labelmap
        replacement: $1
